<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com._520it.crm.mapper.TaskMapper">
    <resultMap id="BaseResultMap" type="com._520it.crm.domain.Task">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="start" property="start" jdbcType="TIMESTAMP"/>
        <result column="endTime" property="end" jdbcType="TIMESTAMP"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="mintaskdescribe" property="mintaskdescribe" jdbcType="VARCHAR"/>
        <result column="minhandledescribe" property="minhandledescribe" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <association property="handleuser" javaType="Employee">
            <id column="handleuser" property="id"/>
            <result column="handleusername" property="username"/>
        </association>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from task
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com._520it.crm.domain.Task" useGeneratedKeys="true" keyProperty="id">
    insert into task (start,endTime , handleUser, title,
      remark, mintaskdescribe, minhandledescribe, 
      status)
    values (#{start,jdbcType=TIMESTAMP},#{end,jdbcType=TIMESTAMP}, #{handleuser.id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR},
      #{remark,jdbcType=VARCHAR}, #{mintaskdescribe,jdbcType=VARCHAR}, #{minhandledescribe,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER})
  </insert>
    <update id="updateByPrimaryKey" parameterType="com._520it.crm.domain.Task">
        update task
        <set>
            <if test="start!=null">start = #{start,jdbcType=TIMESTAMP},</if>
            <if test="end!=null">endTime = #{end,jdbcType=TIMESTAMP},</if>
            <if test="handleuser!=null">handleUser = #{handleuser.id,jdbcType=BIGINT},</if>
            <if test="remark!=null">remark = #{remark,jdbcType=VARCHAR},</if>
            <if test="title!=null">title = #{title,jdbcType=VARCHAR},</if>
            <if test="mintaskdescribe!=null">mintaskdescribe = #{mintaskdescribe,jdbcType=VARCHAR},</if>
            <if test="minhandledescribe!=null">minhandledescribe = #{minhandledescribe,jdbcType=VARCHAR},</if>
            <if test="status!=null">status = #{status,jdbcType=INTEGER}</if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <sql id="selectResult">
        t.id, t.start,t.endTime, t.title, t.remark, t.mintaskdescribe, t.minhandledescribe,
    t.status, e.id as handleuser,e.username as handleusername
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="selectResult"></include>
        from task t left join employee e on e.id = t.handleuser
        where t.id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="selectResult"></include>
        from task t left join employee e on e.id = t.handleuser
    </select>
    <select id="selectByCondition" resultMap="BaseResultMap">
        select
        <include refid="selectResult"></include>
        from task t left join employee e on e.id = t.handleuser
        <include refid="conditions"></include>
        <if test="page!=null">
            Limit #{start},#{rows}
        </if>
    </select>
    <sql id="conditions">
        <where>
            <if test="keyword!=null">
                AND (e.username LIKE concat("%",#{keyword},"%"))
            </if>
            <if test="start!=null">
                AND t.start &gt;= #{start}
            </if>
            <if test="end!=null">
                AND t.endTime &lt;= #{end}
            </if>
            <if test="handleUserId!=null">
                AND t.handleUser=#{handleUserId}
            </if>
        </where>
    </sql>
    <select id="getCount" resultType="long">
        <!-- SELECT COUNT(*) FROM task t -->
        SELECT COUNT(*) from task t left join employee e on e.id = t.handleuser
        <include refid="conditions"></include>
    </select>

</mapper>