<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- 0.导入数据库,never表示如果系统变量名和配置变量名相同，不使用，加前缀就不会有问题 -->
	<context:property-placeholder location="classpath:jdbc.properties" system-properties-mode="NEVER" />

	<!-- 1.配置数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	<!-- 2.sessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 2.1 数据源引用 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 2.2 mybatis配置文件 -->
		<property name="configLocation" value="classpath:mybatis.cfg.xml"/>
		<!-- 2.3 引入映射文件,如果配置了mapper扫描器且xml同名在接口同一目录，就不用指定 -->
		<property name="mapperLocations" value="classpath:com/_520it/crm/mapper/*Mapper.xml"/>
	</bean>

	<!-- 3.事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 4.事务模板,设置事务的属性，匹配这些指定的方法 -->
	<tx:advice id="advice" >
		<tx:attributes>
			<!--设置所有读操作的事务为SUPPORTS，如果没有事务就不开启新事务 -->
			<tx:method name="get*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="select*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="query*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="list*" read-only="true" propagation="SUPPORTS" />
			<!-- 其他方式使用默认的事务 -->
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	
	<!-- 日志增强类 -->
	<bean id="logUtil" class="com._520it.crm.aop.LogAspect"/>
	
	<!-- 5.aop相关配置，事务的增强对service包的操作有效-->
	<aop:config>
		<!---->
		<aop:pointcut id="crudPointCut" expression="execution(* com._520it.crm.service.*Service.*(..))" />
		<aop:advisor advice-ref="advice" pointcut-ref="crudPointCut" />

		<!-- 日志的切面 -->
		<aop:aspect ref="logUtil">
			<!-- 也可以直接使用：pointcut="execution(* com._520it.crm.service.*Service.*(..))" -->
			<aop:after method="writeLog" pointcut-ref="crudPointCut"/>
		</aop:aspect>
	</aop:config>

	<!-- 6.开启注解扫描,扫描除了controller以外的组件 -->
	<context:component-scan base-package="com._520it.crm">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

	<!-- 7.mapper接口的扫描器 只能扫描接口包下的同名xml，不在dao下或者名字不同就要指定mapper.xml的位置 mapperLocations -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com._520it.crm.mapper"/>
    </bean>	
    
</beans>
