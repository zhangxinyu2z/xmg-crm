<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com._520it.crm.mapper.DepartmentMapper">
	<resultMap id="BaseResultMap" type="com._520it.crm.domain.Department">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="sn" property="sn" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="BIT" />
		<association property="manager" javaType="com._520it.crm.domain.Employee">
			<id column="manager_id" property="id" />
			<result column="manager" property="username" />
		</association>
		<association property="parent" javaType="com._520it.crm.domain.Department">
			<id column="parent_id" property="id" />
			<result column="parent" property="name" />
		</association>
	</resultMap>
	<update id="deleteByPrimaryKey" parameterType="java.lang.Long">
	<!-- 	delete from department
		where id = #{id,jdbcType=BIGINT} -->
		update department set state=0 where id=#{id}
	</update>
	<insert id="insert" parameterType="com._520it.crm.domain.Department" useGeneratedKeys="true" keyProperty="id">
		insert
		into department (sn, name, manager_id,
		parent_id, state)
		values (#{sn,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
		#{manager.id,jdbcType=BIGINT},
		#{parent.id,jdbcType=BIGINT}, #{state,jdbcType=BIT})
	</insert>
	<update id="updateByPrimaryKey" parameterType="com._520it.crm.domain.Department">
		update department
		set sn = #{sn,jdbcType=VARCHAR},
		name =
		#{name,jdbcType=VARCHAR},
		manager_id = #{manager.id,jdbcType=BIGINT},
		parent_id = #{parent.id,jdbcType=BIGINT},
		state =
		#{state,jdbcType=BIT}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select id, sn, name, manager_id,
		parent_id, state
		from department
		where id = #{id,jdbcType=BIGINT}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		select id, sn, name, manager_id, parent_id, state
		from department
	</select>

	<select id="queryForEmp" resultType="com._520it.crm.domain.Department">
		select id,name from department
	</select>

	<sql id="where_sql">
		<where>
			<if test="keyword!=null">
				(
				d.name like concat("%",#{keyword},"%") or
				d.sn like concat("%",#{keyword},"%")
				)
			</if>
			<if test="state!=null">
				and d.state = #{state}
			</if>
		</where>
	</sql>

	<select id="queryForPageCount" resultType="long">
		select count(*) from department d
		<include refid="where_sql"></include>
	</select>

	<select id="queryForPage" resultMap="BaseResultMap">
		select d.*,e.username manager,p.name parent from department d
		left join employee e on d.manager_id = e.id
		left join department p on d.parent_id = p.id
		<include refid="where_sql"></include>
		limit #{start},#{rows}
	</select>

	<resultMap id="ListResultMap" type="com._520it.crm.domain.Department">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="name" property="name" jdbcType="VARCHAR" />
	</resultMap>

	<select id="getByMid" resultMap="ListResultMap">
		select  id, name from department WHERE manager_id=#{id}
	</select>
</mapper>